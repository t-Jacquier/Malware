/* This file was generated by the Hex-Rays decompiler version 8.3.0.230608.
   Copyright (c) 2007-2021 Hex-Rays <info@hex-rays.com>

   Detected compiler: Visual C++
*/

#include <windows.h>
#include <defs.h>


//-------------------------------------------------------------------------
// Function declarations

char __cdecl sub_401000(int a1);
int __cdecl main(int argc, const char **argv, const char **envp);
// LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo); idb
int sub_4014B0();
void *sub_40157C();
void __cdecl sub_4015A2(); // idb
int __cdecl UserMathErrorFunction();

//-------------------------------------------------------------------------
// Data declarations

// extern LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter);
// extern int (*printf)(const char *const Format, ...);
const char byte_4020F8[4] = { '\0', '\0', '\0', '\0' }; // idb
_UNKNOWN unk_4021D8; // weak
_UNKNOWN loc_403020; // weak
_UNKNOWN loc_4030A4; // weak
char byte_4030C8[] = { '\x17' }; // weak
char byte_4030C9[] = { '\f' }; // weak
char byte_4030CA[] = { '\x13' }; // weak
char byte_4030CB[10] = { '\x12', 'T', '\f', 'C', '\f', '\x15', '\x15', '\x17', '\x15', '\x02' }; // weak
char byte_4030E8 = '\0'; // weak
_UNKNOWN unk_4030EC; // weak
_UNKNOWN loc_40310F; // weak
_UNKNOWN loc_403170; // weak
char aC74a29496f3e95[33] = "c74a29496f3e95ce11fdfd91952c90ee"; // weak
char aA494aa2dad29c2[33] = "a494aa2dad29c2fe787909ecf13a93e3"; // weak
char byte_40323C[] = { 'd' }; // weak
char byte_40323D[] = { 'd' }; // weak
char byte_40323E[] = { 'f' }; // weak
char byte_40323F[] = { 'f' }; // weak
char aAfbd88183ed59f[33] = "afbd88183ed59feb9ff1474c055fe4b5"; // weak


//----- (00401000) --------------------------------------------------------
char __cdecl sub_401000(int a1)
{
  int v1; // eax
  int v3[8]; // [esp+4h] [ebp-20h] BYREF

  v1 = 0;
  qmemcpy(v3, "bdea63d1cb70184f84d9d0585c8c7e96", sizeof(v3));
  while ( *((_BYTE *)v3 + v1 + a1 - (_DWORD)v3) == *((_BYTE *)v3 + v1) )
  {
    if ( ++v1 >= 32 )
      return 1;
  }
  return 0;
}

//----- (00401080) --------------------------------------------------------
// write access to const memory has been detected, the output may be wrong!
int __cdecl main(int argc, const char **argv, const char **envp)
{
  int i; // eax
  char v5; // cl
  char v6; // cl
  unsigned __int8 v7; // al

  if ( argc < 2 )
    return 0;
  printf("%s\n", argv[1]);
  if ( NtCurrentPeb()->BeingDebugged )
  {
    for ( i = 0; i < 32; i += 4 )
    {
      v5 = byte_40323D[i];
      byte_4030C8[i] ^= byte_40323C[i];
      byte_4030C9[i] ^= v5;
      v6 = byte_40323F[i];
      byte_4030CA[i] ^= byte_40323E[i];
      byte_4030CB[i] ^= v6;
    }
    byte_4030E8 = 0;
    MEMORY[0x78B027BA](byte_4030C8);
    return 1;
  }
  else
  {
    v7 = sub_401000((int)argv[1]);
    printf(byte_4020F8, v7);
    ((void (__cdecl *)(void *, int, char *))((char *)&loc_40310F + 1))(&loc_403170, 95, aC74a29496f3e95);
    ((void (__cdecl *)(char *, int, const char *))loc_403170)(
      (char *)&loc_4030A4 + 4,
      32,
      "07d3cf1f90a0fa7ec951b53069b52ddf");
    ((void (__cdecl *)(void *, int, char *))loc_403170)(&loc_403020, 136, aA494aa2dad29c2);
    ((void (__cdecl *)(void *, int, char *))loc_403170)(&unk_4030EC, 32, aAfbd88183ed59f);
    ((void (__cdecl *)(char *, int, char *))loc_403170)(byte_4030C8, 32, byte_40323C);
    byte_4030E8 = 0;
    if ( (unsigned __int8)((int (__cdecl *)(const char *))loc_403020)(argv[1]) )
    {
      printf("%s", (const char *)&loc_4030A4 + 4);
      while ( 1 )
        ;
    }
    MEMORY[0x78B0032B](&unk_4030EC);
    return 1;
  }
}
// 401106: write access to const memory at 4030E8 has been detected
// 401191: write access to const memory at 4030E8 has been detected
// 4030E8: using guessed type char byte_4030E8;

//----- (004014B0) --------------------------------------------------------
int sub_4014B0()
{
  SetUnhandledExceptionFilter(__CxxUnhandledExceptionFilter);
  return 0;
}

//----- (0040157C) --------------------------------------------------------
void *sub_40157C()
{
  return &unk_4021D8;
}

//----- (004015A2) --------------------------------------------------------
void __cdecl sub_4015A2()
{
  ;
}

//----- (004017D6) --------------------------------------------------------
int __cdecl UserMathErrorFunction()
{
  return 0;
}

// nfuncs=35 queued=6 decompiled=6 lumina nreq=0 worse=0 better=0
// ALL OK, 6 function(s) have been successfully decompiled
